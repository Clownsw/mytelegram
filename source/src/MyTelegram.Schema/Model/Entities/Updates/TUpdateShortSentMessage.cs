// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/updateShortSentMessage" />
///</summary>
[TlObject(0x9015e101)]
public class TUpdateShortSentMessage : IUpdates
{
    public uint ConstructorId => 0x9015e101;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Out { get; set; }
    public int Id { get; set; }
    public int Pts { get; set; }
    public int PtsCount { get; set; }
    public int Date { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/MessageMedia" />
    ///</summary>
    public MyTelegram.Schema.IMessageMedia? Media { get; set; }
    public TVector<MyTelegram.Schema.IMessageEntity>? Entities { get; set; }
    public int? TtlPeriod { get; set; }

    public void ComputeFlag()
    {
        if (Out) { Flags[1] = true; }
        if (Media != null) { Flags[9] = true; }
        if (Entities?.Count > 0) { Flags[7] = true; }
        if (TtlPeriod != 0 && TtlPeriod.HasValue) { Flags[25] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        bw.Write(Id);
        bw.Write(Pts);
        bw.Write(PtsCount);
        bw.Write(Date);
        if (Flags[9]) { Media.Serialize(bw); }
        if (Flags[7]) { Entities.Serialize(bw); }
        if (Flags[25]) { bw.Write(TtlPeriod.Value); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[1]) { Out = true; }
        Id = br.ReadInt32();
        Pts = br.ReadInt32();
        PtsCount = br.ReadInt32();
        Date = br.ReadInt32();
        if (Flags[9]) { Media = br.Deserialize<MyTelegram.Schema.IMessageMedia>(); }
        if (Flags[7]) { Entities = br.Deserialize<TVector<MyTelegram.Schema.IMessageEntity>>(); }
        if (Flags[25]) { TtlPeriod = br.ReadInt32(); }
    }
}