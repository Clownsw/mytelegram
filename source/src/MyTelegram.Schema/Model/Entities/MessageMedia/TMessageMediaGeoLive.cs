// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/messageMediaGeoLive" />
///</summary>
[TlObject(0xb940c666)]
public class TMessageMediaGeoLive : IMessageMedia
{
    public uint ConstructorId => 0xb940c666;
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    ///See <a href="https://core.telegram.org/type/GeoPoint" />
    ///</summary>
    public MyTelegram.Schema.IGeoPoint Geo { get; set; }
    public int? Heading { get; set; }
    public int Period { get; set; }
    public int? ProximityNotificationRadius { get; set; }

    public void ComputeFlag()
    {
        if (Heading != 0 && Heading.HasValue) { Flags[0] = true; }
        if (ProximityNotificationRadius != 0 && ProximityNotificationRadius.HasValue) { Flags[1] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        Geo.Serialize(bw);
        if (Flags[0]) { bw.Write(Heading.Value); }
        bw.Write(Period);
        if (Flags[1]) { bw.Write(ProximityNotificationRadius.Value); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        Geo = br.Deserialize<MyTelegram.Schema.IGeoPoint>();
        if (Flags[0]) { Heading = br.ReadInt32(); }
        Period = br.ReadInt32();
        if (Flags[1]) { ProximityNotificationRadius = br.ReadInt32(); }
    }
}