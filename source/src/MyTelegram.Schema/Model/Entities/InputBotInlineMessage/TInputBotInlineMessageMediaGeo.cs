// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/inputBotInlineMessageMediaGeo" />
///</summary>
[TlObject(0x96929a85)]
public class TInputBotInlineMessageMediaGeo : IInputBotInlineMessage
{
    public uint ConstructorId => 0x96929a85;
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputGeoPoint" />
    ///</summary>
    public MyTelegram.Schema.IInputGeoPoint GeoPoint { get; set; }
    public int? Heading { get; set; }
    public int? Period { get; set; }
    public int? ProximityNotificationRadius { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/ReplyMarkup" />
    ///</summary>
    public MyTelegram.Schema.IReplyMarkup? ReplyMarkup { get; set; }

    public void ComputeFlag()
    {
        if (Heading != 0 && Heading.HasValue) { Flags[0] = true; }
        if (Period != 0 && Period.HasValue) { Flags[1] = true; }
        if (ProximityNotificationRadius != 0 && ProximityNotificationRadius.HasValue) { Flags[3] = true; }
        if (ReplyMarkup != null) { Flags[2] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        GeoPoint.Serialize(bw);
        if (Flags[0]) { bw.Write(Heading.Value); }
        if (Flags[1]) { bw.Write(Period.Value); }
        if (Flags[3]) { bw.Write(ProximityNotificationRadius.Value); }
        if (Flags[2]) { ReplyMarkup.Serialize(bw); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        GeoPoint = br.Deserialize<MyTelegram.Schema.IInputGeoPoint>();
        if (Flags[0]) { Heading = br.ReadInt32(); }
        if (Flags[1]) { Period = br.ReadInt32(); }
        if (Flags[3]) { ProximityNotificationRadius = br.ReadInt32(); }
        if (Flags[2]) { ReplyMarkup = br.Deserialize<MyTelegram.Schema.IReplyMarkup>(); }
    }
}