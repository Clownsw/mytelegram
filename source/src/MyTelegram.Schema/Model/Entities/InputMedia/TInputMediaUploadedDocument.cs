// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/inputMediaUploadedDocument" />
///</summary>
[TlObject(0x5b38c6c1)]
public class TInputMediaUploadedDocument : IInputMedia
{
    public uint ConstructorId => 0x5b38c6c1;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool NosoundVideo { get; set; }
    public bool ForceFile { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputFile" />
    ///</summary>
    public MyTelegram.Schema.IInputFile File { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputFile" />
    ///</summary>
    public MyTelegram.Schema.IInputFile? Thumb { get; set; }
    public string MimeType { get; set; }
    public TVector<MyTelegram.Schema.IDocumentAttribute> Attributes { get; set; }
    public TVector<MyTelegram.Schema.IInputDocument>? Stickers { get; set; }
    public int? TtlSeconds { get; set; }

    public void ComputeFlag()
    {
        if (NosoundVideo) { Flags[3] = true; }
        if (ForceFile) { Flags[4] = true; }
        if (Thumb != null) { Flags[2] = true; }
        if (Stickers?.Count > 0) { Flags[0] = true; }
        if (TtlSeconds != 0 && TtlSeconds.HasValue) { Flags[1] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        File.Serialize(bw);
        if (Flags[2]) { Thumb.Serialize(bw); }
        bw.Serialize(MimeType);
        Attributes.Serialize(bw);
        if (Flags[0]) { Stickers.Serialize(bw); }
        if (Flags[1]) { bw.Write(TtlSeconds.Value); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[3]) { NosoundVideo = true; }
        if (Flags[4]) { ForceFile = true; }
        File = br.Deserialize<MyTelegram.Schema.IInputFile>();
        if (Flags[2]) { Thumb = br.Deserialize<MyTelegram.Schema.IInputFile>(); }
        MimeType = br.Deserialize<string>();
        Attributes = br.Deserialize<TVector<MyTelegram.Schema.IDocumentAttribute>>();
        if (Flags[0]) { Stickers = br.Deserialize<TVector<MyTelegram.Schema.IInputDocument>>(); }
        if (Flags[1]) { TtlSeconds = br.ReadInt32(); }
    }
}