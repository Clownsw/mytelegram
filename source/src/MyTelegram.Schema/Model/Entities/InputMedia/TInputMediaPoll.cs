// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/inputMediaPoll" />
///</summary>
[TlObject(0xf94e5f1)]
public class TInputMediaPoll : IInputMedia
{
    public uint ConstructorId => 0xf94e5f1;
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    ///See <a href="https://core.telegram.org/type/Poll" />
    ///</summary>
    public MyTelegram.Schema.IPoll Poll { get; set; }
    public TVector<byte[]>? CorrectAnswers { get; set; }
    public string? Solution { get; set; }
    public TVector<MyTelegram.Schema.IMessageEntity>? SolutionEntities { get; set; }

    public void ComputeFlag()
    {
        if (CorrectAnswers?.Count > 0) { Flags[0] = true; }
        if (Solution != null) { Flags[1] = true; }
        if (SolutionEntities?.Count > 0) { Flags[1] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        Poll.Serialize(bw);
        if (Flags[0]) { CorrectAnswers.Serialize(bw); }
        if (Flags[1]) { bw.Serialize(Solution); }
        if (Flags[1]) { SolutionEntities.Serialize(bw); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        Poll = br.Deserialize<MyTelegram.Schema.IPoll>();
        if (Flags[0]) { CorrectAnswers = br.Deserialize<TVector<byte[]>>(); }
        if (Flags[1]) { Solution = br.Deserialize<string>(); }
        if (Flags[1]) { SolutionEntities = br.Deserialize<TVector<MyTelegram.Schema.IMessageEntity>>(); }
    }
}