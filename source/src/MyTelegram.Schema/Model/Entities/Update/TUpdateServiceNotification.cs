// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/updateServiceNotification" />
///</summary>
[TlObject(0xebe46819)]
public class TUpdateServiceNotification : IUpdate
{
    public uint ConstructorId => 0xebe46819;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Popup { get; set; }
    public int? InboxDate { get; set; }
    public string Type { get; set; }
    public string Message { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/MessageMedia" />
    ///</summary>
    public MyTelegram.Schema.IMessageMedia Media { get; set; }
    public TVector<MyTelegram.Schema.IMessageEntity> Entities { get; set; }

    public void ComputeFlag()
    {
        if (Popup) { Flags[0] = true; }
        if (InboxDate != 0 && InboxDate.HasValue) { Flags[1] = true; }

    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        if (Flags[1]) { bw.Write(InboxDate.Value); }
        bw.Serialize(Type);
        bw.Serialize(Message);
        Media.Serialize(bw);
        Entities.Serialize(bw);
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { Popup = true; }
        if (Flags[1]) { InboxDate = br.ReadInt32(); }
        Type = br.Deserialize<string>();
        Message = br.Deserialize<string>();
        Media = br.Deserialize<MyTelegram.Schema.IMessageMedia>();
        Entities = br.Deserialize<TVector<MyTelegram.Schema.IMessageEntity>>();
    }
}