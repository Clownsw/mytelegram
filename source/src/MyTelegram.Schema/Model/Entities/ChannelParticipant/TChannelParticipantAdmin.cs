// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/channelParticipantAdmin" />
///</summary>
[TlObject(0x34c3bb53)]
public class TChannelParticipantAdmin : IChannelParticipant
{
    public uint ConstructorId => 0x34c3bb53;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool CanEdit { get; set; }
    public bool Self { get; set; }
    public long UserId { get; set; }
    public long? InviterId { get; set; }
    public long PromotedBy { get; set; }
    public int Date { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/ChatAdminRights" />
    ///</summary>
    public MyTelegram.Schema.IChatAdminRights AdminRights { get; set; }
    public string? Rank { get; set; }

    public void ComputeFlag()
    {
        if (CanEdit) { Flags[0] = true; }
        if (Self) { Flags[1] = true; }
        if (InviterId != 0 && InviterId.HasValue) { Flags[1] = true; }
        if (Rank != null) { Flags[2] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        bw.Write(UserId);
        if (Flags[1]) { bw.Write(InviterId.Value); }
        bw.Write(PromotedBy);
        bw.Write(Date);
        AdminRights.Serialize(bw);
        if (Flags[2]) { bw.Serialize(Rank); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { CanEdit = true; }
        if (Flags[1]) { Self = true; }
        UserId = br.ReadInt64();
        if (Flags[1]) { InviterId = br.ReadInt64(); }
        PromotedBy = br.ReadInt64();
        Date = br.ReadInt32();
        AdminRights = br.Deserialize<MyTelegram.Schema.IChatAdminRights>();
        if (Flags[2]) { Rank = br.Deserialize<string>(); }
    }
}