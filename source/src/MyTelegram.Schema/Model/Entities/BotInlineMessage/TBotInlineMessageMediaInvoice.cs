// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/botInlineMessageMediaInvoice" />
///</summary>
[TlObject(0x354a9b09)]
public class TBotInlineMessageMediaInvoice : IBotInlineMessage
{
    public uint ConstructorId => 0x354a9b09;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool ShippingAddressRequested { get; set; }
    public bool Test { get; set; }
    public string Title { get; set; }
    public string Description { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/WebDocument" />
    ///</summary>
    public MyTelegram.Schema.IWebDocument? Photo { get; set; }
    public string Currency { get; set; }
    public long TotalAmount { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/ReplyMarkup" />
    ///</summary>
    public MyTelegram.Schema.IReplyMarkup? ReplyMarkup { get; set; }

    public void ComputeFlag()
    {
        if (ShippingAddressRequested) { Flags[1] = true; }
        if (Test) { Flags[3] = true; }
        if (Photo != null) { Flags[0] = true; }
        if (ReplyMarkup != null) { Flags[2] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        bw.Serialize(Title);
        bw.Serialize(Description);
        if (Flags[0]) { Photo.Serialize(bw); }
        bw.Serialize(Currency);
        bw.Write(TotalAmount);
        if (Flags[2]) { ReplyMarkup.Serialize(bw); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[1]) { ShippingAddressRequested = true; }
        if (Flags[3]) { Test = true; }
        Title = br.Deserialize<string>();
        Description = br.Deserialize<string>();
        if (Flags[0]) { Photo = br.Deserialize<MyTelegram.Schema.IWebDocument>(); }
        Currency = br.Deserialize<string>();
        TotalAmount = br.ReadInt64();
        if (Flags[2]) { ReplyMarkup = br.Deserialize<MyTelegram.Schema.IReplyMarkup>(); }
    }
}