// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/botInlineMessageMediaVenue" />
///</summary>
[TlObject(0x8a86659c)]
public class TBotInlineMessageMediaVenue : IBotInlineMessage
{
    public uint ConstructorId => 0x8a86659c;
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    ///See <a href="https://core.telegram.org/type/GeoPoint" />
    ///</summary>
    public MyTelegram.Schema.IGeoPoint Geo { get; set; }
    public string Title { get; set; }
    public string Address { get; set; }
    public string Provider { get; set; }
    public string VenueId { get; set; }
    public string VenueType { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/ReplyMarkup" />
    ///</summary>
    public MyTelegram.Schema.IReplyMarkup? ReplyMarkup { get; set; }

    public void ComputeFlag()
    {
        if (ReplyMarkup != null) { Flags[2] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        Geo.Serialize(bw);
        bw.Serialize(Title);
        bw.Serialize(Address);
        bw.Serialize(Provider);
        bw.Serialize(VenueId);
        bw.Serialize(VenueType);
        if (Flags[2]) { ReplyMarkup.Serialize(bw); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        Geo = br.Deserialize<MyTelegram.Schema.IGeoPoint>();
        Title = br.Deserialize<string>();
        Address = br.Deserialize<string>();
        Provider = br.Deserialize<string>();
        VenueId = br.Deserialize<string>();
        VenueType = br.Deserialize<string>();
        if (Flags[2]) { ReplyMarkup = br.Deserialize<MyTelegram.Schema.IReplyMarkup>(); }
    }
}