// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/pageTableCell" />
///</summary>
[TlObject(0x34566b6a)]
public class TPageTableCell : IPageTableCell
{
    public uint ConstructorId => 0x34566b6a;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Header { get; set; }
    public bool AlignCenter { get; set; }
    public bool AlignRight { get; set; }
    public bool ValignMiddle { get; set; }
    public bool ValignBottom { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/RichText" />
    ///</summary>
    public MyTelegram.Schema.IRichText? Text { get; set; }
    public int? Colspan { get; set; }
    public int? Rowspan { get; set; }

    public void ComputeFlag()
    {
        if (Header) { Flags[0] = true; }
        if (AlignCenter) { Flags[3] = true; }
        if (AlignRight) { Flags[4] = true; }
        if (ValignMiddle) { Flags[5] = true; }
        if (ValignBottom) { Flags[6] = true; }
        if (Text != null) { Flags[7] = true; }
        if (Colspan != 0 && Colspan.HasValue) { Flags[1] = true; }
        if (Rowspan != 0 && Rowspan.HasValue) { Flags[2] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        if (Flags[7]) { Text.Serialize(bw); }
        if (Flags[1]) { bw.Write(Colspan.Value); }
        if (Flags[2]) { bw.Write(Rowspan.Value); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { Header = true; }
        if (Flags[3]) { AlignCenter = true; }
        if (Flags[4]) { AlignRight = true; }
        if (Flags[5]) { ValignMiddle = true; }
        if (Flags[6]) { ValignBottom = true; }
        if (Flags[7]) { Text = br.Deserialize<MyTelegram.Schema.IRichText>(); }
        if (Flags[1]) { Colspan = br.ReadInt32(); }
        if (Flags[2]) { Rowspan = br.ReadInt32(); }
    }
}