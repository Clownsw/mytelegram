// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;


///<summary>
///See <a href="https://core.telegram.org/constructor/document" />
///</summary>
[TlObject(0x1e87342b)]
public class TDocument : IDocument
{
    public uint ConstructorId => 0x1e87342b;
    public BitArray Flags { get; set; } = new BitArray(32);
    public long Id { get; set; }
    public long AccessHash { get; set; }
    public byte[] FileReference { get; set; }
    public int Date { get; set; }
    public string MimeType { get; set; }
    public int Size { get; set; }
    public TVector<MyTelegram.Schema.IPhotoSize>? Thumbs { get; set; }
    public TVector<MyTelegram.Schema.IVideoSize>? VideoThumbs { get; set; }
    public int DcId { get; set; }
    public TVector<MyTelegram.Schema.IDocumentAttribute> Attributes { get; set; }

    public void ComputeFlag()
    {
        if (Thumbs?.Count > 0) { Flags[0] = true; }
        if (VideoThumbs?.Count > 0) { Flags[1] = true; }

    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        bw.Write(Id);
        bw.Write(AccessHash);
        bw.Serialize(FileReference);
        bw.Write(Date);
        bw.Serialize(MimeType);
        bw.Write(Size);
        if (Flags[0]) { Thumbs.Serialize(bw); }
        if (Flags[1]) { VideoThumbs.Serialize(bw); }
        bw.Write(DcId);
        Attributes.Serialize(bw);
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        Id = br.ReadInt64();
        AccessHash = br.ReadInt64();
        FileReference = br.Deserialize<byte[]>();
        Date = br.ReadInt32();
        MimeType = br.Deserialize<string>();
        Size = br.ReadInt32();
        if (Flags[0]) { Thumbs = br.Deserialize<TVector<MyTelegram.Schema.IPhotoSize>>(); }
        if (Flags[1]) { VideoThumbs = br.Deserialize<TVector<MyTelegram.Schema.IVideoSize>>(); }
        DcId = br.ReadInt32();
        Attributes = br.Deserialize<TVector<MyTelegram.Schema.IDocumentAttribute>>();
    }
}