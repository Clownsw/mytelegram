// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Photos;

///<summary>
///See <a href="https://core.telegram.org/method/photos.uploadProfilePhoto" />
///</summary>
[TlObject(0x89f30f69)]
public sealed class RequestUploadProfilePhoto : IRequest<MyTelegram.Schema.Photos.IPhoto>
{
    public uint ConstructorId => 0x89f30f69;
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputFile" />
    ///</summary>
    public MyTelegram.Schema.IInputFile? File { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputFile" />
    ///</summary>
    public MyTelegram.Schema.IInputFile? Video { get; set; }
    public double? VideoStartTs { get; set; }

    public void ComputeFlag()
    {
        if (File != null) { Flags[0] = true; }
        if (Video != null) { Flags[1] = true; }
        if (VideoStartTs>0) { Flags[2] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        if (Flags[0]) { File.Serialize(bw); }
        if (Flags[1]) { Video.Serialize(bw); }
        if (Flags[2]) { bw.Serialize(VideoStartTs.Value); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { File = br.Deserialize<MyTelegram.Schema.IInputFile>(); }
        if (Flags[1]) { Video = br.Deserialize<MyTelegram.Schema.IInputFile>(); }
        if (Flags[2]) { VideoStartTs = br.ReadDouble(); }
    }
}
