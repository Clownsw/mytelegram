// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Auth;


///<summary>
///See <a href="https://core.telegram.org/constructor/auth.sentCode" />
///</summary>
[TlObject(0x5e002502)]
public class TSentCode : ISentCode
{
    public uint ConstructorId => 0x5e002502;
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    ///See <a href="https://core.telegram.org/type/auth.SentCodeType" />
    ///</summary>
    public MyTelegram.Schema.Auth.ISentCodeType Type { get; set; }
    public string PhoneCodeHash { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/auth.CodeType" />
    ///</summary>
    public MyTelegram.Schema.Auth.ICodeType? NextType { get; set; }
    public int? Timeout { get; set; }

    public void ComputeFlag()
    {
        if (NextType != null) { Flags[1] = true; }
        if (Timeout != 0 && Timeout.HasValue) { Flags[2] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        Type.Serialize(bw);
        bw.Serialize(PhoneCodeHash);
        if (Flags[1]) { NextType.Serialize(bw); }
        if (Flags[2]) { bw.Write(Timeout.Value); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        Type = br.Deserialize<MyTelegram.Schema.Auth.ISentCodeType>();
        PhoneCodeHash = br.Deserialize<string>();
        if (Flags[1]) { NextType = br.Deserialize<MyTelegram.Schema.Auth.ICodeType>(); }
        if (Flags[2]) { Timeout = br.ReadInt32(); }
    }
}