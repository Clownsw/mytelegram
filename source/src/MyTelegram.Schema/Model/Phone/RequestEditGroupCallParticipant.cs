// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Phone;

///<summary>
///See <a href="https://core.telegram.org/method/phone.editGroupCallParticipant" />
///</summary>
[TlObject(0xa5273abf)]
public sealed class RequestEditGroupCallParticipant : IRequest<MyTelegram.Schema.IUpdates>
{
    public uint ConstructorId => 0xa5273abf;
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputGroupCall" />
    ///</summary>
    public MyTelegram.Schema.IInputGroupCall Call { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputPeer" />
    ///</summary>
    public MyTelegram.Schema.IInputPeer Participant { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/Bool" />
    ///</summary>
    public bool? Muted { get; set; }
    public int? Volume { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/Bool" />
    ///</summary>
    public bool? RaiseHand { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/Bool" />
    ///</summary>
    public bool? VideoStopped { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/Bool" />
    ///</summary>
    public bool? VideoPaused { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/Bool" />
    ///</summary>
    public bool? PresentationPaused { get; set; }

    public void ComputeFlag()
    {
        if (Muted !=null) { Flags[0] = true; }
        if (Volume != 0 && Volume.HasValue) { Flags[1] = true; }
        if (RaiseHand !=null) { Flags[2] = true; }
        if (VideoStopped !=null) { Flags[3] = true; }
        if (VideoPaused !=null) { Flags[4] = true; }
        if (PresentationPaused !=null) { Flags[5] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        Call.Serialize(bw);
        Participant.Serialize(bw);
        if (Flags[0]) { bw.Serialize(Muted.Value); }
        if (Flags[1]) { bw.Write(Volume.Value); }
        if (Flags[2]) { bw.Serialize(RaiseHand.Value); }
        if (Flags[3]) { bw.Serialize(VideoStopped.Value); }
        if (Flags[4]) { bw.Serialize(VideoPaused.Value); }
        if (Flags[5]) { bw.Serialize(PresentationPaused.Value); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        Call = br.Deserialize<MyTelegram.Schema.IInputGroupCall>();
        Participant = br.Deserialize<MyTelegram.Schema.IInputPeer>();
        if (Flags[0]) { Muted = br.Deserialize<bool>(); }
        if (Flags[1]) { Volume = br.ReadInt32(); }
        if (Flags[2]) { RaiseHand = br.Deserialize<bool>(); }
        if (Flags[3]) { VideoStopped = br.Deserialize<bool>(); }
        if (Flags[4]) { VideoPaused = br.Deserialize<bool>(); }
        if (Flags[5]) { PresentationPaused = br.Deserialize<bool>(); }
    }
}
