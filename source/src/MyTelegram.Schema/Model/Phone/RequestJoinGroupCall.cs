// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Phone;

///<summary>
///See <a href="https://core.telegram.org/method/phone.joinGroupCall" />
///</summary>
[TlObject(0xb132ff7b)]
public sealed class RequestJoinGroupCall : IRequest<MyTelegram.Schema.IUpdates>
{
    public uint ConstructorId => 0xb132ff7b;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Muted { get; set; }
    public bool VideoStopped { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputGroupCall" />
    ///</summary>
    public MyTelegram.Schema.IInputGroupCall Call { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputPeer" />
    ///</summary>
    public MyTelegram.Schema.IInputPeer JoinAs { get; set; }
    public string? InviteHash { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/DataJSON" />
    ///</summary>
    public MyTelegram.Schema.IDataJSON Params { get; set; }

    public void ComputeFlag()
    {
        if (Muted) { Flags[0] = true; }
        if (VideoStopped) { Flags[2] = true; }
        if (InviteHash != null) { Flags[1] = true; }

    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        Call.Serialize(bw);
        JoinAs.Serialize(bw);
        if (Flags[1]) { bw.Serialize(InviteHash); }
        Params.Serialize(bw);
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { Muted = true; }
        if (Flags[2]) { VideoStopped = true; }
        Call = br.Deserialize<MyTelegram.Schema.IInputGroupCall>();
        JoinAs = br.Deserialize<MyTelegram.Schema.IInputPeer>();
        if (Flags[1]) { InviteHash = br.Deserialize<string>(); }
        Params = br.Deserialize<MyTelegram.Schema.IDataJSON>();
    }
}
