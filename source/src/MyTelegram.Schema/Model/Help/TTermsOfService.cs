// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Help;


///<summary>
///See <a href="https://core.telegram.org/constructor/help.termsOfService" />
///</summary>
[TlObject(0x780a0310)]
public class TTermsOfService : ITermsOfService
{
    public uint ConstructorId => 0x780a0310;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Popup { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/DataJSON" />
    ///</summary>
    public MyTelegram.Schema.IDataJSON Id { get; set; }
    public string Text { get; set; }
    public TVector<MyTelegram.Schema.IMessageEntity> Entities { get; set; }
    public int? MinAgeConfirm { get; set; }

    public void ComputeFlag()
    {
        if (Popup) { Flags[0] = true; }
        if (MinAgeConfirm != 0 && MinAgeConfirm.HasValue) { Flags[1] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        Id.Serialize(bw);
        bw.Serialize(Text);
        Entities.Serialize(bw);
        if (Flags[1]) { bw.Write(MinAgeConfirm.Value); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { Popup = true; }
        Id = br.Deserialize<MyTelegram.Schema.IDataJSON>();
        Text = br.Deserialize<string>();
        Entities = br.Deserialize<TVector<MyTelegram.Schema.IMessageEntity>>();
        if (Flags[1]) { MinAgeConfirm = br.ReadInt32(); }
    }
}