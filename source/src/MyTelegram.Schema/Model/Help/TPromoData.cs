// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Help;


///<summary>
///See <a href="https://core.telegram.org/constructor/help.promoData" />
///</summary>
[TlObject(0x8c39793f)]
public class TPromoData : IPromoData
{
    public uint ConstructorId => 0x8c39793f;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Proxy { get; set; }
    public int Expires { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/Peer" />
    ///</summary>
    public MyTelegram.Schema.IPeer Peer { get; set; }
    public TVector<MyTelegram.Schema.IChat> Chats { get; set; }
    public TVector<MyTelegram.Schema.IUser> Users { get; set; }
    public string? PsaType { get; set; }
    public string? PsaMessage { get; set; }

    public void ComputeFlag()
    {
        if (Proxy) { Flags[0] = true; }
        if (PsaType != null) { Flags[1] = true; }
        if (PsaMessage != null) { Flags[2] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        bw.Write(Expires);
        Peer.Serialize(bw);
        Chats.Serialize(bw);
        Users.Serialize(bw);
        if (Flags[1]) { bw.Serialize(PsaType); }
        if (Flags[2]) { bw.Serialize(PsaMessage); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { Proxy = true; }
        Expires = br.ReadInt32();
        Peer = br.Deserialize<MyTelegram.Schema.IPeer>();
        Chats = br.Deserialize<TVector<MyTelegram.Schema.IChat>>();
        Users = br.Deserialize<TVector<MyTelegram.Schema.IUser>>();
        if (Flags[1]) { PsaType = br.Deserialize<string>(); }
        if (Flags[2]) { PsaMessage = br.Deserialize<string>(); }
    }
}