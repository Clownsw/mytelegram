// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Messages;

///<summary>
///See <a href="https://core.telegram.org/method/messages.saveDraft" />
///</summary>
[TlObject(0xbc39e14b)]
public sealed class RequestSaveDraft : IRequest<IBool>
{
    public uint ConstructorId => 0xbc39e14b;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool NoWebpage { get; set; }
    public int? ReplyToMsgId { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputPeer" />
    ///</summary>
    public MyTelegram.Schema.IInputPeer Peer { get; set; }
    public string Message { get; set; }
    public TVector<MyTelegram.Schema.IMessageEntity>? Entities { get; set; }

    public void ComputeFlag()
    {
        if (NoWebpage) { Flags[1] = true; }
        if (ReplyToMsgId != 0 && ReplyToMsgId.HasValue) { Flags[0] = true; }
        if (Entities?.Count > 0) { Flags[3] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        if (Flags[0]) { bw.Write(ReplyToMsgId.Value); }
        Peer.Serialize(bw);
        bw.Serialize(Message);
        if (Flags[3]) { Entities.Serialize(bw); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[1]) { NoWebpage = true; }
        if (Flags[0]) { ReplyToMsgId = br.ReadInt32(); }
        Peer = br.Deserialize<MyTelegram.Schema.IInputPeer>();
        Message = br.Deserialize<string>();
        if (Flags[3]) { Entities = br.Deserialize<TVector<MyTelegram.Schema.IMessageEntity>>(); }
    }
}
