// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Messages;

///<summary>
///See <a href="https://core.telegram.org/method/messages.setInlineBotResults" />
///</summary>
[TlObject(0xeb5ea206)]
public sealed class RequestSetInlineBotResults : IRequest<IBool>
{
    public uint ConstructorId => 0xeb5ea206;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool Gallery { get; set; }
    public bool Private { get; set; }
    public long QueryId { get; set; }
    public TVector<MyTelegram.Schema.IInputBotInlineResult> Results { get; set; }
    public int CacheTime { get; set; }
    public string? NextOffset { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InlineBotSwitchPM" />
    ///</summary>
    public MyTelegram.Schema.IInlineBotSwitchPM? SwitchPm { get; set; }

    public void ComputeFlag()
    {
        if (Gallery) { Flags[0] = true; }
        if (Private) { Flags[1] = true; }
        if (NextOffset != null) { Flags[2] = true; }
        if (SwitchPm != null) { Flags[3] = true; }
    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        bw.Write(QueryId);
        Results.Serialize(bw);
        bw.Write(CacheTime);
        if (Flags[2]) { bw.Serialize(NextOffset); }
        if (Flags[3]) { SwitchPm.Serialize(bw); }
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { Gallery = true; }
        if (Flags[1]) { Private = true; }
        QueryId = br.ReadInt64();
        Results = br.Deserialize<TVector<MyTelegram.Schema.IInputBotInlineResult>>();
        CacheTime = br.ReadInt32();
        if (Flags[2]) { NextOffset = br.Deserialize<string>(); }
        if (Flags[3]) { SwitchPm = br.Deserialize<MyTelegram.Schema.IInlineBotSwitchPM>(); }
    }
}
