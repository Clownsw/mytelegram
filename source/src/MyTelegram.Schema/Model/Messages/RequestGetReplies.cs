// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Messages;

///<summary>
///See <a href="https://core.telegram.org/method/messages.getReplies" />
///</summary>
[TlObject(0x22ddd30c)]
public sealed class RequestGetReplies : IRequest<MyTelegram.Schema.Messages.IMessages>
{
    public uint ConstructorId => 0x22ddd30c;

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputPeer" />
    ///</summary>
    public MyTelegram.Schema.IInputPeer Peer { get; set; }
    public int MsgId { get; set; }
    public int OffsetId { get; set; }
    public int OffsetDate { get; set; }
    public int AddOffset { get; set; }
    public int Limit { get; set; }
    public int MaxId { get; set; }
    public int MinId { get; set; }
    public long Hash { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        Peer.Serialize(bw);
        bw.Write(MsgId);
        bw.Write(OffsetId);
        bw.Write(OffsetDate);
        bw.Write(AddOffset);
        bw.Write(Limit);
        bw.Write(MaxId);
        bw.Write(MinId);
        bw.Write(Hash);
    }

    public void Deserialize(BinaryReader br)
    {
        Peer = br.Deserialize<MyTelegram.Schema.IInputPeer>();
        MsgId = br.ReadInt32();
        OffsetId = br.ReadInt32();
        OffsetDate = br.ReadInt32();
        AddOffset = br.ReadInt32();
        Limit = br.ReadInt32();
        MaxId = br.ReadInt32();
        MinId = br.ReadInt32();
        Hash = br.ReadInt64();
    }
}
