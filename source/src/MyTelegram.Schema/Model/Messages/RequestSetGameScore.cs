// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Messages;

///<summary>
///See <a href="https://core.telegram.org/method/messages.setGameScore" />
///</summary>
[TlObject(0x8ef8ecc0)]
public sealed class RequestSetGameScore : IRequest<MyTelegram.Schema.IUpdates>
{
    public uint ConstructorId => 0x8ef8ecc0;
    public BitArray Flags { get; set; } = new BitArray(32);
    public bool EditMessage { get; set; }
    public bool Force { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputPeer" />
    ///</summary>
    public MyTelegram.Schema.IInputPeer Peer { get; set; }
    public int Id { get; set; }

    ///<summary>
    ///See <a href="https://core.telegram.org/type/InputUser" />
    ///</summary>
    public MyTelegram.Schema.IInputUser UserId { get; set; }
    public int Score { get; set; }

    public void ComputeFlag()
    {
        if (EditMessage) { Flags[0] = true; }
        if (Force) { Flags[1] = true; }

    }

    public void Serialize(BinaryWriter bw)
    {
        ComputeFlag();
        bw.Write(ConstructorId);
        bw.Serialize(Flags);
        Peer.Serialize(bw);
        bw.Write(Id);
        UserId.Serialize(bw);
        bw.Write(Score);
    }

    public void Deserialize(BinaryReader br)
    {
        Flags = br.Deserialize<BitArray>();
        if (Flags[0]) { EditMessage = true; }
        if (Flags[1]) { Force = true; }
        Peer = br.Deserialize<MyTelegram.Schema.IInputPeer>();
        Id = br.ReadInt32();
        UserId = br.Deserialize<MyTelegram.Schema.IInputUser>();
        Score = br.ReadInt32();
    }
}
